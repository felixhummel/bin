#!/usr/bin/env python
"""
Get Chromedriver versions from Google.
Note that we look for linux64 only.
"""

import os
import re
import sys

from pathlib import Path
import xml.etree.ElementTree as ET

import requests


URL = 'https://chromedriver.storage.googleapis.com/'
try:
    cache_dir = os.environ['REQUESTS_CACHE_DIR']
    import requests_cache
    requests_cache.install_cache(cache_dir)
except KeyError:
    pass
except ImportError:
    sys.stderr.write('ERROR: REQUESTS_CACHE_DIR set, but requests-cache not installed. Try:\n')
    sys.stderr.write('pip install requests-cache\n')
    raise SystemExit

try:
    search_major = sys.argv[1]
except IndexError:
    search_major = None

response = requests.get(URL)
response.raise_for_status()

# strip default namespace https://stackoverflow.com/a/35165997/241240
xml = re.sub(r"""\sxmlns=["'].+?["']""", '', response.text, count=1)
root = ET.fromstring(xml)

versions = []
for e in root.findall('./Contents/Key'):
    key = e.text  # e.g. "99.0.4844.17/chromedriver_linux64.zip"
    match = re.match(r'^([\d.]+)/chromedriver_linux64.zip', key)
    if match:
        versions.append(match.group(1))

def _version_sort_key(v):
    # str(101.0.4951.15) --> int(101)
    return int(v.split('.')[0])

versions = sorted(versions, key=_version_sort_key)

if search_major is None:
    for v in versions:
        print(v)
else:
    hits = [v for v in versions if v.startswith(search_major)]
    print(hits[-1])  # latest
